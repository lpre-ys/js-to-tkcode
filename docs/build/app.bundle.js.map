{"version":3,"sources":["webpack:///webpack/bootstrap 3c8840f4a71d6323bda9","webpack:///./js/front/app.js","webpack:///delegated ./node_modules/mithril/mithril.js from dll-reference vendor_library","webpack:///external \"vendor_library\"","webpack:///./js/front/component.js","webpack:///./js/lib/js-to-tkcode.js","webpack:///delegated ./node_modules/esprima/esprima.js from dll-reference vendor_library","webpack:///./js/lib/tk-var-manager.js","webpack:///./js/util/tk-mock.js","webpack:///./js/util/execute-log.js","webpack:///./js/util/commands/key-entry.js","webpack:///./js/util/command.js","webpack:///./js/util/const.js","webpack:///./js/lib/optimizer/optimize.js","webpack:///delegated ./node_modules/estraverse/estraverse.js from dll-reference vendor_library","webpack:///./js/lib/optimizer/optimize-for.js","webpack:///delegated ./node_modules/escodegen/escodegen.js from dll-reference vendor_library","webpack:///./js/lib/optimizer/optimize-const.js","webpack:///./js/lib/optimizer/function-optimizer.js","webpack:///./js/lib/parser/parser.js","webpack:///./js/lib/tmp-var-factory.js","webpack:///./js/lib/parser/parse-assign.js","webpack:///./js/lib/parser/parse-var.js","webpack:///./js/lib/parser/parse-binary.js","webpack:///./js/lib/parser/parse-if.js","webpack:///./js/lib/parser/parse-test.js","webpack:///./js/lib/parser/parse-while.js","webpack:///./js/lib/parser/parse-call.js","webpack:///delegated ./node_modules/js-yaml/index.js from dll-reference vendor_library"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;;;;;;;ACLA,+C;;;;;;ACAA,iC;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,sCAAsC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C,UAAS;AACT;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjCA,8C;;;;;;ACAA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAkC,KAAK;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;;AAEA;;AAEA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3BA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,QAAQ,GAAG,OAAO;AACrC;AACA,0BAAyB,QAAQ,UAAU,KAAK,YAAY,0CAA0C;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,yBAAwB,QAAQ,IAAI,aAAa,OAAO,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA6B,aAAa,GAAG,QAAQ;AACrD;AACA;AACA;;;;;;;AC3BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,UAAU,EAAE;AAC3D;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;;;;;;AC9DA,8C;;;;;;ACAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iCAAgC;AAChC,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,MAAM;AAC5B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA,8C;;;;;;ACAA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;AChBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;;;;;;;ACvDA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;;AAGA;;;;;;;AC/EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAoB,aAAa,GAAG,cAAc;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,KAAK,IAAI,KAAK,IAAI,oBAAoB;AAC/E,QAAO;AACP,4CAA2C,KAAK,IAAI,KAAK,IAAI,UAAU,OAAO,YAAY;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,KAAK,IAAI,KAAK,IAAI,UAAU,OAAO,YAAY;AACxF;AACA;AACA;AACA,2CAA0C,2BAA2B;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,4BAA4B;AAC5E;AACA;AACA,6CAA4C,8BAA8B;AAC1E;AACA;AACA;AACA;AACA;AACA,6CAA4C,qBAAqB;AACjE;AACA;AACA;;AAEA;;;;;;;AC3BA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAAG,SAAS,IAAI,UAAU;;AAE/F,2BAA0B,QAAQ;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjFA;;AAEA;;AAEA;AACA,QAAO,4BAA4B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,oBAAoB,IAAI,QAAQ,IAAI,MAAM,IAAI,6BAA6B;AACxG;AACA;AACA;AACA,8BAA6B,eAAe;AAC5C;AACA;AACA;AACA,8BAA6B,wBAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,qBAAqB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAsC,KAAK,IAAI;AAC/C,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,yCAAwC,aAAa;AACrD;AACA,EAAC;AACD;AACA;AACA;;;;;;;ACxCA,+C","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c8840f4a71d6323bda9","'use strict';\n\nconst m = require('mithril');\nconst component = require('./component');\n\nm.mount(document.getElementById('root'), component);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/front/app.js\n// module id = 0\n// module chunks = 0","module.exports = (__webpack_require__(2))(21);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/mithril/mithril.js from dll-reference vendor_library\n// module id = 1\n// module chunks = 0","module.exports = vendor_library;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor_library\"\n// module id = 2\n// module chunks = 0","const m = require('mithril');\nconst JsToTkcode = require('../lib/js-to-tkcode');\nconst yaml = require('js-yaml');\n\nconst component = {\n  controller: function () {\n    const input = m.prop('');\n    const config = m.prop('');\n    // TODO\n    const varList = {\n      'test': 42,\n      'test2': 43,\n      'test3': 44\n    };\n    const tmpStart = 101;\n    const tmpEnd = 200;\n    const switchList = {\n      'isTest1': 21\n    };\n    const jsToTkcode = new JsToTkcode({varList, tmpStart, tmpEnd, switchList});\n    return {\n      input: input,\n      config: config,\n      getOutput: () => {\n        // TODO\n        let ret = '';\n        try {\n          ret = jsToTkcode.translate(input());\n        } catch (e) {\n          console.log(e);\n        }\n\n        return ret;\n      },\n      setConfig: (value) => {\n        config(value);\n        const configObj = yaml.load(value);\n        jsToTkcode.resetConfig(configObj);\n      }\n    };\n  },\n  view: (ctrl) => {\n    // const vm = ctrl.vm;\n    return m('.app', [\n      m('h1', 'JavaScript to TKcode'),\n      m('.main', [\n        m('h2', 'config'),\n        m('textarea#config', {\n          onkeyup: m.withAttr('value', ctrl.setConfig)\n        }, ctrl.config()),\n        m('h2', 'input'),\n        m('textarea#input', {\n          onkeyup: m.withAttr('value', ctrl.input)\n        }, ctrl.input()),\n        m('h2', 'output'),\n        m('textarea#output', {\n          readonly: 'readonly',\n          onfocus: (e) => { e.target.select(); }\n        }, ctrl.getOutput())\n      ])\n    ]);\n  }\n};\n\nmodule.exports = component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/front/component.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nconst esprima = require('esprima');\n// const estraverse = require('estraverse');\n// const escodegen = require('escodegen');\n\nconst tkVarManager = require('./tk-var-manager');\nconst TkMock = require('../util/tk-mock');\n\n\nconst optimize = require('./optimizer/optimize');\nconst Parser = require('./parser/parser');\n\nclass JsToTkcode {\n  constructor(options) {\n    tkVarManager.setOptions(options);\n    this.TkMock = TkMock;\n    this.tkMock = new TkMock();\n    this.parser = new Parser(this.tkMock);\n  }\n  translate(script, isTmp = false) {\n    this.parser.reset();\n    const ast = esprima.parse(script);\n    const optimized = optimize(ast, this.tkMock.Const);\n    this.parser.parseAst(optimized, isTmp);\n\n    return this.parser.outputs.join(\"\\n\");\n  }\n  resetConfig(options) {\n    tkVarManager.setOptions(options);\n  }\n}\n\nmodule.exports = JsToTkcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/js-to-tkcode.js\n// module id = 4\n// module chunks = 0","module.exports = (__webpack_require__(2))(1);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/esprima/esprima.js from dll-reference vendor_library\n// module id = 5\n// module chunks = 0","'use strict';\n\nclass TkVarManager {\n  setOptions(options = {}) {\n    this.varList = options.varList || {};\n    this.switchList = options.switchList || {};\n    this.tmpStart = options.tmpStart;\n    this.tmpEnd = options.tmpEnd;\n  }\n  getVarNumber(name) {\n    if (this.varList[name]) {\n      return this.varList[name];\n    }\n    if(this.switchList[name]) {\n      return this.switchList[name];\n    }\n\n    throw new Error(`未定義の変数です。: ${name}`);\n  }\n\n  getTmpVarNumber(index) {\n    const number = this.tmpStart + index;\n    if (number < this.tmpStart || number > this.tmpEnd) {\n      throw new Error(`一時変数があふれました`);\n    }\n\n    return number;\n  }\n}\nconst instance = new TkVarManager();\nmodule.exports = instance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/tk-var-manager.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nconst executeLog = require('./execute-log');\n\nconst KeyEntry = require('./commands/key-entry');\n\nclass TkMock {\n  constructor(prjConst = {}) {\n    this.state = 'test';\n    this.commands = [];\n    executeLog.reset();\n    // const merge\n    this.Const = require('./const');\n    this.Const = Object.assign(this.Const, prjConst);\n    // set Functions;\n    const keyEntry = new KeyEntry();\n    this.keyEntry = (...args) => {\n      return keyEntry.execute.apply(keyEntry, args);\n    };\n    this.commands.push(keyEntry);\n    // const dir = __dirname + '/commands';\n    // const filelist = ['key-entry.js'];  // TODO\n    // filelist.forEach((filename) => {\n    //   const functionName = this.makeFunctionName(filename.slice(0, -3));\n    //   const cmdClass = require(dir + '/' + filename);\n    //   const instance = new cmdClass();\n    //   this[functionName] = (...args) => {\n    //     return instance.execute.apply(instance, args);\n    //   };\n    //   this.commands.push(instance);\n    // });\n  }\n  setOutputMode() {\n    this.state = 'output';\n    this.commands.forEach((command) => {\n      command.mode = 'output';\n    });\n  }\n  get name() {\n    return 'tkMock';\n  }\n  makeFunctionName(str) {\n    const ret = str.replace(/-./g, (matched) => {\n        return matched.charAt(1).toUpperCase();\n    });\n\n    return ret;\n  }\n  get log() {\n    return executeLog.log;\n  }\n}\nmodule.exports = TkMock;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/util/tk-mock.js\n// module id = 7\n// module chunks = 0","class ExecuteLog {\n  constructor() {\n    this.logs = [];\n  }\n\n  push(log) {\n    this.logs.push(log);\n  }\n\n  reset() {\n    this.logs.length = 0;\n  }\n\n  get last() {\n    if (this.logs.length == 0) {\n      return '';\n    }\n    return this.logs[this.logs.length - 1];\n  }\n\n  get log() {\n    return this.logs.join(\"\\n\");\n  }\n}\n\nconst executeLog = new ExecuteLog();\n\nmodule.exports = executeLog;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/util/execute-log.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nconst Command = require('../command');\nconst tkVarManager = require('../../lib/tk-var-manager');\n\nconst keys = ['enter', 'cancel', 'shift', 'down', 'left', 'right', 'up'];\nclass KeyEntry extends Command {\n\n  run(receive, push = true, targetKeys = false) {\n    if (typeof receive == 'string') {\n      const number = tkVarManager.getVarNumber(receive);\n      receive = `${receive}(${number})`;\n    }\n    this.writeLog(`var[${receive}], push[${push}], target[${targetKeys ? targetKeys.join(',') : \"ALL\"}]`);\n\n    return true;\n  }\n  output(receive, push = true, targetKeys = false) {\n    const keyCodes = [];\n    keys.forEach((key) => {\n      keyCodes.push((!targetKeys || targetKeys.includes(key)) ? 1 : 0);\n    });\n\n    return [`KeyEntry(${receive}, ${push ? 1 : 0}, 1, ${keyCodes.join(', ')})`];\n  }\n  get JP_NAME() {\n    return 'キー入力の処理';\n  }\n}\n\nmodule.exports = KeyEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/util/commands/key-entry.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nclass Command {\n  constructor() {\n    this.mode = 'exec';\n    this.executeLog = require('./execute-log');\n  }\n  execute(...args) {\n    if (this.mode == 'exec') {\n      return this.run.apply(this, args);\n    } else if (this.mode == 'output') {\n      return this.output.apply(this, args);\n    }\n  }\n  get JP_NAME() {\n    return 'TODO';\n  }\n  run() {\n\n  }\n  output() {\n\n  }\n  writeLog(message) {\n    this.executeLog.push(`◆${this.JP_NAME}：${message}`);\n  }\n}\nmodule.exports = Command;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/util/command.js\n// module id = 10\n// module chunks = 0","'use strict';\n\n// TODO なんかYamlとかで定義する？\nconst Const = {\n  'KEY_DOWN'  : 1,\n  'KEY_LEFT'  : 2,\n  'KEY_RIGHT' : 3,\n  'KEY_UP'    : 4,\n  'KEY_ENTER' : 5,\n  'KEY_CANCEL': 6,\n  'KEY_SHIFT' : 7\n};\n\nmodule.exports = Const;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/util/const.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nconst estraverse = require('estraverse');\n\nconst optimizeFor = require('./optimize-for');\nconst optimizeConst = require('./optimize-const');\nconst FunctionOptimizer = require('./function-optimizer');\n\nfunction optimize(ast) {\n  const functionOptimizer = new FunctionOptimizer();\n  // 基本のoptimizeと、functionを退避\n  estraverse.replace(ast, {\n    enter: function (node) {\n      switch (node.type) {\n        case 'ForStatement': {\n          this.skip();\n          return optimizeFor(node);\n        }\n        case 'MemberExpression': {\n          const newNode = optimizeConst(node);\n          if (newNode) {\n            return newNode;\n          }\n          break;\n        }\n      }\n    },\n    leave: function (node) {\n      switch (node.type) {\n        case 'FunctionDeclaration': {\n          const name = node.id.name;\n          functionOptimizer.addFunction(name, node);\n          return null;\n        }\n        case 'Program': {\n          // nullのnodeを削除する\n          node.body = node.body.filter((v) => { return v; });\n          break;\n        }\n      }\n    }\n  });\n  estraverse.replace(ast, {\n    enter: function (node) {\n      switch (node.type) {\n        case 'ExpressionStatement': {\n          if (node.expression.type === 'CallExpression') {\n            const exp = node.expression;\n            const funcNode = functionOptimizer.getNode(exp.callee.name, exp.arguments);\n            if (funcNode) {\n              return funcNode;\n            }\n          }\n          break;\n        }\n      }\n    }\n  });\n\n  return ast;\n}\n\nmodule.exports = optimize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/optimizer/optimize.js\n// module id = 12\n// module chunks = 0","module.exports = (__webpack_require__(2))(3);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/estraverse/estraverse.js from dll-reference vendor_library\n// module id = 13\n// module chunks = 0","'use strict';\n\nconst esprima = require('esprima');\nconst escodegen = require('escodegen');\nconst estraverse = require('estraverse');\n\nfunction optimizeFor(node) {\n  // pre perseが必要\n  const init = node.init.declarations[0].init.value;\n  const varName = node.init.declarations[0].id.name;\n  // init, test, update\n  const max = node.test.right.value;\n  const add = 1;  //TODO\n  // 複雑な条件文には対応しない\n  // console.log(node.body);\n  let result = esprima.parse(`{}`).body[0];\n  for (let i = init; i < max; i += add) {\n    // TODO body parse\n    const bodyAst = esprima.parse(escodegen.generate(node.body));\n    estraverse.replace(bodyAst, {\n      leave: function (subNode) {\n        // TODO String\n        if (subNode.type === 'Identifier'\n          && subNode.name == varName) {\n            const value = i;\n            return {\n              type: 'Literal',\n              value: value,\n              raw: `${value}`\n            };\n        }\n      }\n    });\n    result.body.push(bodyAst);\n  }\n  return result;\n}\n\nmodule.exports = optimizeFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/optimizer/optimize-for.js\n// module id = 14\n// module chunks = 0","module.exports = (__webpack_require__(2))(2);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/escodegen/escodegen.js from dll-reference vendor_library\n// module id = 15\n// module chunks = 0","'use strict';\n\nconst escodegen = require('escodegen');\n\nfunction optimizeConst(node, Const) {\n  const code = escodegen.generate(node);\n  if (code.startsWith('tkMock.Const') && Object.keys(Const).includes(node.property.name)) {\n    return {\"type\": \"Literal\", \"value\": Const[node.property.name]};\n  }\n  return node;\n}\n\nmodule.exports = optimizeConst;\n\n/*\n\n*/\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/optimizer/optimize-const.js\n// module id = 16\n// module chunks = 0","const esprima = require('esprima');\nconst estraverse = require('estraverse');\nconst escodegen = require('escodegen');\n\nclass FunctionOptimizer{\n  constructor() {\n    this.functions = {};\n  }\n\n  addFunction(name, node) {\n    this.functions[name] = node;\n  }\n\n  getFunction(name) {\n    if (this.functions[name]) {\n      return this.functions[name];\n    } else {\n      return false;\n    }\n  }\n\n  getNode(name, args) {\n    const node = this.getFunction(name);\n    if (!node) {\n      return false;\n    }\n\n    const ret = esprima.parse(escodegen.generate(node.body)).body[0];\n\n    if (args.length > 0) {\n      // パラメータのハッシュを作成\n      const argMap = {};\n      args.forEach((arg, i) => {\n        argMap[node.params[i].name] = arg;\n      });\n\n      // ハッシュをもとに置換\n      estraverse.replace(ret, {\n        leave: function (node) {\n          switch (node.type) {\n            case 'Identifier': {\n              if (Object.keys(argMap).includes(node.name)) {\n                return argMap[node.name];\n              }\n              break;\n            }\n          }\n        }\n      });\n    }\n\n    return ret;\n  }\n}\n\nmodule.exports = FunctionOptimizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/optimizer/function-optimizer.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nconst estraverse = require('estraverse');\n\nconst tmpVarFactory = require('../tmp-var-factory');\n\nconst parseAssign = require('./parse-assign');\nconst parseBinary = require('./parse-binary');\nconst parseIf = require('./parse-if');\nconst parseWhile = require('./parse-while');\nconst parseCall = require('./parse-call');\n\nclass Parser {\n  constructor(tkMock) {\n    this.outputs = [];\n    if (tkMock) {\n      tkMock.setOutputMode();\n    }\n    this.tkMock = tkMock;\n  }\n\n  appendOutput(args) {\n    if (Array.isArray(args)) {\n      this.outputs = this.outputs.concat(args);\n    } else {\n      this.outputs.push(args);\n    }\n  }\n\n  reset() {\n    this.outputs.length = 0;\n  }\n\n  parseAst(ast, isTmp = false) {\n      const that = this;\n      // TODO functionのパース\n      estraverse.replace(ast, {\n        enter: function (node) {\n          switch (node.type) {\n            case 'IfStatement': {\n              parseIf(node, that);\n              this.skip();\n              break;\n            }\n            case 'WhileStatement': {\n              parseWhile(node, that);\n              this.skip();\n              break;\n            }\n            case 'CallExpression': {\n              parseCall(node, that);\n              this.skip();\n              break;\n            }\n          }\n        },\n        leave: function (node) {\n          switch (node.type) {\n            case 'BinaryExpression': {\n              return parseBinary(node, that);\n            }\n            case 'AssignmentExpression': {\n              parseAssign(node, that);\n              break;\n            }\n            case 'ExpressionStatement': {\n              if (!isTmp) {\n                tmpVarFactory.reset();\n              }\n              break;\n            }\n          }\n        }\n      });\n\n  }\n}\n\n\nmodule.exports = Parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parser.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\nconst TMP_ARR_NAME = 'TMP';\n\nclass TmpVarFactory {\n  constructor() {\n    this.tmpIndex = 0;\n  }\n  make() {\n    const name = `${TMP_ARR_NAME}[${this.tmpIndex}]`;\n    this.tmpIndex++;\n\n    return name;\n  }\n  reset() {\n    this.tmpIndex = 0;\n  }\n\n  get TMP_ARR_NAME() {\n    return TMP_ARR_NAME;\n  }\n}\n\nmodule.exports = new TmpVarFactory();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/tmp-var-factory.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nconst parseVar = require('./parse-var');\n\nfunction parseAssign(node, parser) {\n  const left = parseVar(node.left);\n  const right = node.right;\n  const opeNumber = Operators[node.operator.substr(0, 1)];\n  switch (right.type) {\n    case 'Literal': {\n      if(typeof right.value === 'boolean') {\n        parser.outputs.push(`Switch(0, ${left}, ${left}, ${right.value ? 0 : 1})`);\n      } else {\n        parser.outputs.push(`Variable(0, ${left}, ${left}, ${opeNumber}, 0, ${right.value}, 0)`);\n      }\n      break;\n    }\n    case 'MemberExpression':\n    case 'Identifier': {\n      const rightNumber = parseVar(right);\n      parser.outputs.push(`Variable(0, ${left}, ${left}, ${opeNumber}, 1, ${rightNumber}, 0)`);\n      break;\n    }\n    default: {\n      throw Error(`parseAssignにて未対応の右辺: ${JSON.stringify(node.right)}`);\n    }\n  }\n}\n\nconst Operators = {\n  '=' : 0,\n  '+' : 1,\n  '-' : 2,\n  '*' : 3,\n  '/' : 4,\n  '%' : 5\n};\n\nmodule.exports = parseAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-assign.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nconst tkVarManager = require('../tk-var-manager');\nconst tmpVarFactory = require('../tmp-var-factory');\n\nfunction parseVar(node) {\n  switch (node.type) {\n    case 'Identifier': {\n      const varNumber = tkVarManager.getVarNumber(node.name);\n      return varNumber;\n    }\n    case 'MemberExpression': {\n      if (node.object.name !== tmpVarFactory.TMP_ARR_NAME) {\n        throw Error(`parseVar オブジェクト変数は未対応です: ${JSON.stringify(node.object)}`);\n      }\n      if (node.property.type !== 'Literal') {\n        throw Error(`parseVar 不正なプロパティです: ${JSON.stringify(node.property)}`);\n      }\n      const varNumber = tkVarManager.getTmpVarNumber(node.property.value);\n      return varNumber;\n    }\n    default: {\n      throw Error(`parseVar 未定義のtype呼び出し: ${JSON.stringify(node)}`);\n    }\n  }\n}\n\nmodule.exports = parseVar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-var.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nconst esprima = require('esprima');\nconst escodegen = require('escodegen');\n\nconst tmpVarFactory = require('../tmp-var-factory');\n\nfunction parseBinary(node, parser) {\n  let {\n    operator,\n    left,\n    right\n  } = node;\n  if (!Object.keys(BinaryOperators).includes(operator)) {\n    return {\n      operator,\n      left,\n      right\n    };\n  }\n  if (left.type === 'Literal' && right.type === 'Literal') {\n    // 両方リテラルの場合、事前計算する（最適化）\n    return optLiteralBinary(operator, left, right);\n  }\n\n  const leftCode = escodegen.generate(left);\n  const rightCode = escodegen.generate(right);\n\n  const tmpName = tmpVarFactory.make();\n  parser.parseAst(esprima.parse(`${tmpName} = ${leftCode}; ${tmpName} ${operator}= ${rightCode}`), true);\n\n  return esprima.parse(`${tmpName}`).body[0].expression;\n}\n\nfunction optLiteralBinary(operator, left, right) {\n  let value, type;\n  type = 'Literal';\n  switch (operator) {\n    case '+':\n      {\n        value = left.value + right.value;\n        break;\n      }\n    case '-':\n      {\n        value = left.value - right.value;\n        break;\n      }\n    case '*':\n      {\n        value = left.value * right.value;\n        break;\n      }\n    case '/':\n      {\n        value = left.value / right.value;\n        value = Math.floor(value);\n        break;\n      }\n    case '%':\n      {\n        value = left.value % right.value;\n        break;\n      }\n  }\n\n  return {\n    value,\n    type\n  };\n}\n\nconst BinaryOperators = {\n  '=' : 0,\n  '+' : 1,\n  '-' : 2,\n  '*' : 3,\n  '/' : 4,\n  '%' : 5\n};\n\nmodule.exports = parseBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-binary.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nconst parseTest = require('./parse-test');\n\nfunction parseIf(node, parser) {\n  let {test, consequent, alternate} = node;\n  parseTest(test, parser.outputs);\n  consequent.type = 'Program';\n  parser.parseAst(consequent);\n  if (alternate) {\n    parser.outputs.push(`Else`);\n    parser.parseAst(alternate);\n  }\n  parser.outputs.push(`EndIf`);\n}\n\nmodule.exports = parseIf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-if.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nconst parseVar = require('./parse-var');\n\nfunction parseTest(node, outputs) {\n  // test句のパース\n  switch (node.type) {\n    case 'BinaryExpression': {\n      const varType = node.right.type === 'Literal' ? 0 : 1;\n      const right = node.right.type === 'Literal' ? node.right.value : parseVar(node.right);\n      outputs.push(`If(01, ${parseVar(node.left)}, ${varType}, ${right}, ${TestOperators[node.operator]}, 0)`);\n      break;\n    }\n    case 'Identifier': {\n      outputs.push(`If(00, ${parseVar(node)}, 0, 0, 0, 0)`);\n      break;\n    }\n    case 'UnaryExpression': {\n      outputs.push(`If(00, ${parseVar(node.argument)}, 1, 0, 0, 0)`);\n      break;\n    }\n    case 'Literal': {\n      return false;\n    }\n    default: {\n      throw Error(`未対応のノードタイプです。: ${JSON.stringify(node)}`);\n    }\n  }\n\n  return true;\n}\n\nconst TestOperators = {\n  '==' : 0,\n  '>=' : 1,\n  '<=' : 2,\n  '>'  : 3,\n  '<'  : 4,\n  '!=' : 5\n};\n\nmodule.exports = parseTest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-test.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nconst parseTest = require('./parse-test');\n\nfunction parseWhile(node, parser) {\n  parser.outputs.push(`Loop`);\n  if (parseTest(node.test, parser.outputs)) {\n    // test句が有効な場合のみ、break文を自動で挟む\n    parser.outputs.push(`Break`);\n    parser.outputs.push(`EndIf`);\n  }\n  parser.parseAst(node.body);\n  parser.outputs.push(`EndLoop`);\n}\n\nmodule.exports = parseWhile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-while.js\n// module id = 25\n// module chunks = 0","const escodegen = require('escodegen');\n\nfunction parseCall(node, parser) {\n  const tkMock = parser.tkMock;\n  const callee = node.callee;\n  if (callee.type === 'MemberExpression' && callee.object.name === tkMock.name) {\n    const code = escodegen.generate(node);\n    eval(`parser.appendOutput(ret = ${code})`); // TODO eval......\n  } else {\n    // TODO function parser\n  }\n}\n\nmodule.exports = parseCall;\n\n// 古いコード\n/*\nconst funcName = callee.property.name;\nconst args = [];\nnode.arguments.forEach((argNode) => {\n  switch (argNode.type) {\n    case 'Literal': {\n      args.push(argNode.value);\n      break;\n    }\n    case 'ArrayExpression': {\n      // TODO 深い階層のパース。必要？\n      const tmp = [];\n      argNode.elements.forEach((aryNode) => {\n        tmp.push(aryNode.value);\n      });\n      args.push(tmp);\n      break;\n    }\n    default:\n      throw Error(`未対応のargments.type: ${argNode.type}`);\n  }\n});\nconst ret = tkMock[funcName](args);\nparser.appendOutput(ret);\n*/\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/lib/parser/parse-call.js\n// module id = 26\n// module chunks = 0","module.exports = (__webpack_require__(2))(23);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/js-yaml/index.js from dll-reference vendor_library\n// module id = 27\n// module chunks = 0"],"sourceRoot":""}